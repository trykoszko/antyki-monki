{"version":3,"sources":["webpack:///./src/components/Content/index.js","webpack:///./src/pages/o-nas.js","webpack:///./src/components/SEO/index.js"],"names":["StyledContent","styled","div","Content","children","narrow","Onas","location","data","useStaticQuery","title","get","content","Layout","SEO","Container","withBottomOffset","withTopOffset","dangerouslySetInnerHTML","__html","description","lang","meta","keywords","site","metaDescription","siteMetadata","htmlAttributes","replace","match","capture","charCode","String","fromCharCode","titleTemplate","name","property","author","concat","length","join","rel","sizes","href","withPrefix","type","defaultProps"],"mappings":"gMAGMA,E,UAAgBC,EAAOC,IAAV,6EAAGD,CAAH,oJA0BJE,EAJC,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,OAAZ,OACd,kBAACL,EAAD,CAAeK,OAAQA,GAASD,ICenBE,UAhCF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACPC,EAAOC,yBAAe,cAetBC,EAAQC,IAAIH,EAAM,wCAClBI,EAAUD,IAAIH,EAAM,0CAE1B,OACE,kBAACK,EAAA,EAAD,CAAQN,SAAUA,GAChB,kBAACO,EAAA,EAAD,CAAKJ,MAAOA,IACZ,kBAACK,EAAA,EAAD,CAAWV,QAAM,EAACW,kBAAgB,EAACC,eAAa,GAC9C,kBAAC,EAAD,KACE,4BAAKP,GACL,yBAAKQ,wBAAyB,CAACC,OAAQP,U,kCClCjD,iDAOA,SAASE,EAAT,GAA0D,IAA5CM,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,SAAUb,EAAQ,EAARA,MACxCc,EAAQf,yBAAe,YAAvBe,KAcDC,EAAkBL,GAAeI,EAAKE,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFX,MACEA,GACAA,EAAMkB,QAAQ,eAAe,SAACC,EAAOC,EAASC,GAAjB,OAC3BC,OAAOC,aAAaF,MAGxBG,cAAa,QAAUV,EAAKE,aAAahB,MACzCY,KAAM,CACJ,CACEa,KAAK,cACLvB,QAASa,GAEX,CACEW,SAAS,WACTxB,QAASF,GAEX,CACE0B,SAAS,iBACTxB,QAASa,GAEX,CACEW,SAAS,UACTxB,QAAQ,WAEV,CACEuB,KAAK,eACLvB,QAAQ,WAEV,CACEuB,KAAK,kBACLvB,QAASY,EAAKE,aAAaW,QAE7B,CACEF,KAAK,gBACLvB,QAASF,GAEX,CACEyB,KAAK,sBACLvB,QAASa,GAEX,CAACU,KAAM,0BAA2BvB,QAAS,WAC3C,CAACuB,KAAM,cAAevB,QAAS,YAE9B0B,OACCf,EAASgB,OAAS,EACd,CACEJ,KAAK,WACLvB,QAASW,EAASiB,KAAT,OAEX,IAELF,OAAOhB,IAEV,0BACEmB,IAAI,mBACJC,MAAM,UACNC,KAAMC,qBAAW,oCAEnB,0BACEH,IAAI,OACJI,KAAK,YACLH,MAAM,QACNC,KAAMC,qBAAW,iCAEnB,0BACEH,IAAI,OACJI,KAAK,YACLH,MAAM,QACNC,KAAMC,qBAAW,kCAMzB9B,EAAIgC,aAAe,CACjBzB,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGT","file":"component---src-pages-o-nas-js-ebe174b4654ab6b0dbcb.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledContent = styled.div`\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: flex-start;\n\n  width: 100%;\n\n  line-height: 1.5;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol {\n    margin-bottom: 20px;\n  }\n`\n\nconst Content = ({children, narrow}) => (\n  <StyledContent narrow={narrow}>{children}</StyledContent>\n)\n\nexport default Content\n","import React from 'react'\nimport {graphql, useStaticQuery} from 'gatsby'\nimport get from 'lodash/get'\n\nimport SEO from '../components/SEO'\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport Content from '../components/Content'\n\nconst Onas = ({location}) => {\n  const data = useStaticQuery(graphql`\n    query AboutusQuery {\n      allWordpressPage(filter: {slug: {eq: \"o-nas\"}}) {\n        edges {\n          node {\n            title\n            content\n          }\n        }\n      }\n    }\n  `)\n\n  // console.log('data', data)\n\n  const title = get(data, 'allWordpressPage.edges[0].node.title')\n  const content = get(data, 'allWordpressPage.edges[0].node.content')\n\n  return (\n    <Layout location={location}>\n      <SEO title={title} />\n      <Container narrow withBottomOffset withTopOffset>\n        <Content>\n          <h1>{title}</h1>\n          <div dangerouslySetInnerHTML={{__html: content}} />\n        </Content>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Onas\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {Helmet} from 'react-helmet'\nimport {useStaticQuery, graphql, withPrefix} from 'gatsby'\n\nfunction SEO({description, lang, meta, keywords, title}) {\n  const {site} = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={\n        title &&\n        title.replace(/(&#(\\d+);)/g, (match, capture, charCode) =>\n          String.fromCharCode(charCode),\n        )\n      }\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {name: 'msapplication-TileColor', content: '#da532c'},\n        {name: 'theme-color', content: '#ffffff'},\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    >\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={withPrefix('/favicons/apple-touch-icon.png')}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href={withPrefix('/favicons/favicon-32x32.png')}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href={withPrefix('/favicons/favicon-16x16.png')}\n      />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}